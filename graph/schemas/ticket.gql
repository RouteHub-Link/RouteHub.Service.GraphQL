type Ticket {
  id: UUID!
  user: User!
  organization: Organization!
  title: String!
  category: String!
  description: String!
  messages: [TicketMessage!]!
  attachments: [String!]
  status: TicketStatus!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
}

type TicketMessage {
  id: UUID!
  ticket: Ticket!
  sender: TicketSender!
  user: User!
  content: String!
  createdAt: DateTime!
  updatedAt: DateTime
  deletedAt: DateTime
}

input TicketMessageInput {
  content: String!
}

input TicketInput {
  title: String!
  category: String!
  description: String!
  attachments: [String!]
}

extend type Query {
  ticket(id: UUID!): Ticket!
  tickets: [Ticket!]!
}

extend type Mutation {
  createTicket(input: TicketInput!): Ticket! @auth
  updateTicket(id: UUID!, input: TicketInput!): Ticket! @auth
  deleteTicket(id: UUID!): Ticket! @auth
  createTicketMessage(ticketId: UUID!, input: TicketMessageInput!): TicketMessage! @auth
  updateTicketMessage(id: UUID!, input: TicketMessageInput!): TicketMessage! @auth
  deleteTicketMessage(id: UUID!): TicketMessage! @auth
}