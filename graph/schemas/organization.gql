type Organization @organizationPermission(permission: ORGANIZATION_READ){
  id: UUID!
  name: String!
  website: String!
  permissions: [OrganizationPermission!]!
  platforms: [Platform!]!
  industry: [Industry!]
  description: String!
  location: String!
  socialMedias: [SocialMedia!]!
  users: [User!]!
  domains: [Domain!]!
}

type Industry {
  name: String!
}


type SocialMedia {
  name: String!
  url: String!
  icon: String!
}

input OrganizationCreateInput {
  name: String!
  website: String!
  description: String!
  location: String!
  socialMedias: [SocialMediaInput!]!
}

input OrganizationsWithPermissionsInput {
  organizationId: UUID!
  permissions: [OrganizationPermission!]!
}

"If the user want's to update the organization, must has ORGANIZATION_UPDATE permission."
input OrganizationUpdateInput @organizationPermission(permission: ORGANIZATION_UPDATE) {
  organizationId: UUID!
  name: String!
  website: String!
  description: String!
  location: String!
  socialMedias: [SocialMediaInput!]!
}

input SocialMediaInput {
  name: String!
  url: String!
  icon: String!
}


extend type Query {
  "Gets all of the organizations that is not production query must has super admin directive."
  organizations: [Organization!]! @auth
}

extend type Mutation {
  "Authorized person create first/another organization."
  createOrganization(input: OrganizationCreateInput!): Organization! @auth
  "Authorized person could update the organization. It's mostly used for updating the organization created by the registration process."
  updateOrganization(input: OrganizationUpdateInput!): Organization! @auth
}
